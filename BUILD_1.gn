#
# Copyright (c) [2020] Huawei Technologies Co.,Ltd.All rights reserved.
#
# OpenArkCompiler is licensed under the Mulan PSL v1.
# You can use this software according to the terms and conditions of the Mulan PSL v1.
# You may obtain a copy of Mulan PSL v1 at:
#
#     http://license.coscl.org.cn/MulanPSL
#
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
# FIT FOR A PARTICULAR PURPOSE.
# See the Mulan PSL v1 for more details.
#
group("maple") {
  deps = [
    "${MAPLEALL_ROOT}:maple",
  ]
}

group("irbuild") {
  deps = [
    "${MAPLEALL_ROOT}:irbuild",
  ]
}

group("mplfe") {
  deps = [
    "${MPLFE_ROOT}:mplfe",
  ]
}

group("mplfeUT") {
  deps = [
    "${MPLFE_ROOT}/test:mplfeUT",
  ]
}

group("ast2mpl") {
  deps = []
  if (IS_AST2MPL_EXISTS == "1") {
    deps = [
      "${AST2MPL_ROOT}/src:ast2mpl",
    ]
  }
}

group("aarch64isa_headers") {
  exec_script(
      "${MAPLEALL_ROOT}/maple_be/src/cg/script/genmop.py",
      [
        rebase_path("${MAPLEALL_ROOT}/maple_be/src/cg/aarch64/aarch64_md.def",
                    root_build_dir),
        rebase_path(
            "${MAPLEALL_ROOT}/maple_be/include/cg/aarch64/aarch64_isa.def",
            root_build_dir),
      ])
}

group("maplegendef") {
  exec_script("${MAPLEALL_ROOT}/maple_be/mdgen/gendef.py",
              [
                rebase_path("${GN_BINARY_OUTPUT_DIRECTORY}/maplegen",
                            root_build_dir),
                rebase_path("${MAPLEALL_ROOT}/maple_be/include/ad/cortex_a55",
                            root_build_dir),
                rebase_path("${MAPLEALL_ROOT}/maple_be/include/ad/target",
                            root_build_dir),
              ])
}
